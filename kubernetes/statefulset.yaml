apiVersion: v1
kind: ConfigMap
metadata:
  name: mft
  labels:
    app.kubernetes.io/name: activetransfer
    app.kubernetes.io/instance: mft
    app.kubernetes.io/version: "11.1"
data:
  application.properties: |
    jdbc.wmat.dbURL=jdbc:wm:postgresql://pgsqldemo-primary.pgsql.svc:5432;DatabaseName=pgsqldemo
    jdbc.wmat.userid=$secret{DATABASE_USER}
    jdbc.wmat.password=$secret{DATABASE_PASSWORD}
    jdbc.wmat.driverAlias=DataDirect Connect JDBC PostgreSQL Driver
    jdbcfunc.ISCoreAudit.connPoolAlias=wmat
    jdbcfunc.ISInternal.connPoolAlias=wmat
    jdbcfunc.ProcessAudit.connPoolAlias=wmat
    jdbcfunc.ActiveTransfer.connPoolAlias=wmat
    jdbcfunc.ActiveTransferArchive.connPoolAlias=wmat
    jdbcfunc.CentralUsers.connPoolAlias=wmat

    remoteserver.mft0.host=mft-0.mft-h.mft.svc.cluster.local
    remoteserver.mft0.password=$secret{ADMIN_PASSWORD}
    remoteserver.mft0.port=5555
    remoteserver.mft0.user=Administrator
    remoteserver.mft1.host=mft-1.mft-h.mft.svc.cluster.local
    remoteserver.mft1.password=$secret{ADMIN_PASSWORD}
    remoteserver.mft1.port=5555
    remoteserver.mft1.user=Administrator
    remoteserver.mft2.host=mft-2.mft-h.mft.svc.cluster.local
    remoteserver.mft2.password=$secret{ADMIN_PASSWORD}
    remoteserver.mft2.port=5555
    remoteserver.mft2.user=Administrator

    user.Administrator.password=$secret{ADMIN_PASSWORD}

    globalvariable.SERVER.value=$env{SERVER}

---

apiVersion: v1
kind: Service
metadata:
  name: mft
  labels:
    app.kubernetes.io/name: activetransfer
    app.kubernetes.io/instance: mft
    app.kubernetes.io/version: "11.1"
spec:
  type: ClusterIP
  ports:
  - port: 8000
    protocol: TCP
    targetPort: sftp
    name: http-mft-ui
  - port: 5555
    protocol: TCP
    targetPort: http
    name: http
  - port: 9999
    protocol: TCP
    targetPort: diag
    name: diag
  - port: 5543
    protocol: TCP
    targetPort: https
    name: https
  selector:
    app.kubernetes.io/name: activetransfer
    app.kubernetes.io/instance: mft

---

apiVersion: v1
kind: Service
metadata:
  name: mft-h
  labels:
    app.kubernetes.io/name: activetransfer
    app.kubernetes.io/instance: mft
    app.kubernetes.io/version: "11.1"
spec:
  clusterIP: None
  ports:
    - port: 5555
      protocol: TCP
      targetPort: http
      name: http
    - port: 5543
      protocol: TCP
      targetPort: https
      name: https
  selector:
    app.kubernetes.io/name: activetransfer
    app.kubernetes.io/instance: mft

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mft
  labels:
    app.kubernetes.io/name: activetransfer
    app.kubernetes.io/instance: mft
    app.kubernetes.io/version: "11.1"
spec:
  serviceName: mft-h
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: activetransfer
      app.kubernetes.io/instance: mft
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics" 
        prometheus.io/port: "5555"
        prometheus.io/scheme: "http"
      labels:
        app.kubernetes.io/name: activetransfer
        app.kubernetes.io/instance: mft
    spec:
      imagePullSecrets:
        - name: cr-regcred
      serviceAccountName: default
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
      initContainers:
        []
      containers:
        - name: mft
          securityContext:
            fsGroup: 1724
          image: "default-route-openshift-image-registry.apps.678663c1feba7dc9c41f356d.ocp.techzone.ibm.com/mft/activetransfer:11.1.20250219"
          imagePullPolicy: Always
          env:
          - name: JAVA_MIN_MEM
            value: 2048M
          - name: JAVA_MAX_MEM
            value: 4096M
          - name: SAG_IS_CONFIG_PROPERTIES
            value: "/opt/webmethods/IntegrationServer/instances/default/application.properties"
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: REMOTE_SERVERS
            value: "mft0,mft1,mft2"
          ports:
          - containerPort: 8000
            name: sftp
            protocol: TCP
          - containerPort: 5543
            name: https
            protocol: TCP
          - containerPort: 9999
            name: diag
            protocol: TCP
          - containerPort: 5555
            name: http
            protocol: TCP
          startupProbe:
            failureThreshold: 32
            initialDelaySeconds: 20
            periodSeconds: 5
            tcpSocket:
              port: http
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/liveness
              port: http
            initialDelaySeconds: 0
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 5
            tcpSocket:
              port: http
            initialDelaySeconds: 0
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 2000m
              memory: 4096Mi
            requests:
              cpu: 1000m
              memory: 2048Mi
          volumeMounts:
            - name: application-properties
              mountPath: /opt/webmethods/IntegrationServer/instances/default/application.properties
              subPath: application.properties
              readOnly: true
            - name: mft-secrets
              mountPath: /etc/secrets
            - mountPath: /files
              name: fileshare
              readOnly: false
      volumes:
        - name: mft-secrets
          secret:
            secretName: mft-secrets
        - name: application-properties
          configMap:
            name: mft
            items:
            - key: application.properties
              path: application.properties
        - name: fileshare
          persistentVolumeClaim:
            claimName: mft-pvc